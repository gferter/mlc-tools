
class Model<SerializedObject>
{
	Observer:runtime eventQuestsChanged;

	list<QuestBase*> quests
	list<Item*> items

	function void push_quest_event(string event, int value)
	{
		bool result = false;
		for( auto& quest : quests)
		{
			result = quest->push(event, value) || result;
		}
		if( result )
		{
			eventQuestsChanged.pushevent();
		}
	}

	function void add_item(Item* item)
	{
		items.push_back(item);
	}
}

class Controller<SerializedObject>
{
	Model* model

	function void loot(Item* item)
	{
		if(item)
		{
			auto event = "loot_" + item->type;
			model->add_item(item);
			model->push_quest_event(event, 1);
		}
	}
}

class Interaction<SerializedObject>:visitor{}
class InteractionAttack<Interaction>{}
class InteractionTakeItem<Interaction>{}
class InteractionLootItem<Interaction>{}
class InteractionSpawnUnit<Interaction>
{
	Unit* unit
}
class InteractionMoveBy<Interaction>
{
	float x;
	float y;
}
class InteractionMoveTo<Interaction>
{
	float x;
	float y;
}
class InteractionPushEvent<Interaction>
{
	string event
}
class InteractionLever<Interaction>
{
}
