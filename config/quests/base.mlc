
class QuestTaskBase<SerializedObject>:visitor
{
	function bool push(string event, int value):abstract;
	function bool isComplete()
	{
		return getCurrentProgress() >= getGoalProgress();
	}
	function int getCurrentProgress()
	{
		return _current;
	}
	function int getGoalProgress()
	{
		return _goal;
	}
	function void _add(int value)
	{
		_current = math.min(_goal, _current + value);
	}
	int _current;
	int _goal;
}

class QuestBase<SerializedObject>:visitor
{
	function bool push(string event, int value)
	{
		bool result = false;
		for( auto& t : tasks)
		{
			result = t->push(event, value) || result;
		}
		return result;
	}
	function int getCurrentProgress()
	{
		auto sum = 0;
		for( auto& t : tasks)
		{
			sum += t->getCurrentProgress();
		}
		return sum;
	}
	function int getGoalProgress()
	{
		auto sum = 0;
		for( auto& t : tasks)
		{
			sum += t->getGoalProgress();
		}
		return sum;
	}

	list<QuestTaskBase*> tasks
}
